// The queries in this file are NOT autogenerated. They must be updated if there are changes to the backend schema
import {
  ModelReportSymptomFilterInput,
  ModelSortDirection,
  ModelStringKeyConditionInput
} from "aws/API";

// Depth level 3 - getAlert
export const getFullAlert = /* GraphQL */ `
  query GetAlert($id: ID!) {
    getAlert(id: $id) {
      id
      patientID
      patientName
      dateTime
      summary
      colorCode
      triageValue
      vitalsReportID
      symptomReportID
      pending
      completed
      createdAt
      updatedAt
      symptomReport {
        id
        patientID
        activityInfoID
        activityInfo {
          id
          patientID
          activityName
          startTime
          days
          durationInMinutes
          locations
          symptoms
          createdAt
          updatedAt
        }
        symptomName
        severity
        dateTime
        summary
        weather
        temperature
        humidity
        createdAt
        updatedAt
      }
      vitalsReport {
        id
        patientID
        dateTime
        weight
        systolicBloodPressure
        diastolicBloodPressure
        oxygenSaturation
        fluidIntakeInMl
        weather
        temperature
        humidity
        createdAt
        updatedAt
      }
    }
  }
`;

export const listReportSymptomsWithActivityByDateTime = /* GraphQL */ `
  query listReportSymptomsByDateTime(
    $patientID: String
    $dateTime: ModelStringKeyConditionInput
    $sortDirection: ModelSortDirection
    $filter: ModelReportSymptomFilterInput
    $limit: Int
    $nextToken: String
  ) {
    listReportSymptomsByDateTime(
      patientID: $patientID
      dateTime: $dateTime
      sortDirection: $sortDirection
      filter: $filter
      limit: $limit
      nextToken: $nextToken
    ) {
      items {
        id
        patientID
        activityInfoID
        activityInfo {
          id
          patientID
          activityName
          startTime
          days
          durationInMinutes
          locations
          symptoms
          createdAt
          updatedAt
        }
        symptomName
        severity
        dateTime
        summary
        weather
        temperature
        humidity
        createdAt
        updatedAt
      }
      nextToken
    }
  }
`;

// == Override Type ==

export type ListReportSymptomsWithActivityByDateTimeQueryVariables = {
  patientID?: string | null;
  dateTime?: ModelStringKeyConditionInput | null;
  sortDirection?: ModelSortDirection | null;
  filter?: ModelReportSymptomFilterInput | null;
  limit?: number | null;
  nextToken?: string | null;
};

export type ListReportSymptomsWithActivityByDateTimeQuery = {
  listReportSymptomsByDateTime?: {
    __typename: "ModelReportSymptomConnection";
    items?: Array<{
      __typename: "ReportSymptom";
      id: string;
      patientID: string;
      activityInfoID: string;
      activityInfo: {
        __typename: "ActivityInfo";
        id: string;
        patientID: string;
        activityName: string;
        startTime: string;
        days?: Array<string> | null;
        durationInMinutes?: number | null;
        locations?: Array<string> | null;
        symptoms?: Array<string> | null;
        createdAt: string;
        updatedAt: string;
      } | null;
      symptomName: string;
      severity: number;
      dateTime: string;
      summary: string;
      weather?: string | null;
      temperature?: string | null;
      humidity?: string | null;
      createdAt: string;
      updatedAt: string;
    } | null> | null;
    nextToken?: string | null;
  } | null;
};
