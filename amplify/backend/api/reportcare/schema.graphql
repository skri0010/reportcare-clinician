type PatientInfo
  @model
  @auth(rules: [{ allow: owner }, { allow: groups, groups: ["Admin"] }])
  @key(name: "byPatient", fields: ["patientID"]) {
  id: ID!
  name: String!
  address: String!
  deviceNo: String!
  diagnosisInfo: String!
  NHYAclass: String!
  cardiologist: String!
  hospitalName: String!
  hospitalLocation: String!
  targetWeight: String!
  targetActivity: String!
  patientID: String!
}

type MedicationInfo
  @model
  @auth(
    rules: [
      { allow: owner }
      { allow: groups, groups: ["Admin"] }
      { allow: groups, groups: ["Clinicians"], operations: [read] }
      { allow: groups, groupsField: "patientID", operations: [read, update] }
    ]
  )
  @key(name: "byPatient", fields: ["patientID"]) {
  id: ID!
  medname: String!
  dosage: String!
  patientID: String!
}

type ActivityInfo
  @model
  @auth(rules: [{ allow: owner }, { allow: groups, groups: ["Admin"] }])
  @key(name: "byPatient", fields: ["patientID"]) {
  id: ID!
  Actname: String!
  Location: String!
  Frequency: Int!
  Days: [String!]!
  time: String!
  patientID: String!
}

type MedCompliant
  @model
  @auth(rules: [{ allow: owner }, { allow: groups, groups: ["Admin"] }])
  @key(name: "byPatient", fields: ["patientID"]) {
  id: ID!
  MedId: String!
  Verification: Boolean!
  Date: AWSDateTime!
  patientID: String!
}

type ReportSymptom
  @model
  @auth(rules: [{ allow: owner }, { allow: groups, groups: ["Admin"] }])
  @key(name: "byPatient", fields: ["patientID"]) {
  id: ID!
  ActId: String!
  Name: String!
  Severity: String!
  DateTime: AWSDateTime!
  patientID: String!
}

type ReportVitals
  @model
  @auth(rules: [{ allow: owner }, { allow: groups, groups: ["Admin"] }])
  @key(name: "byPatient", fields: ["patientID"]) {
  id: ID!
  SymptomId: String!
  Temperature: String
  Humidity: String
  Weight: String!
  BPSys: String!
  BPDi: String!
  NoSteps: String!
  OxySat: String!
  DateTime: AWSDateTime!
  patientID: String!
}

type ClinicianInfo
  @model
  @auth(rules: [{ allow: owner }])
  @key(name: "byClinician", fields: ["clinicianID"]) {
  id: ID!
  name: String!
  hospitalName: String!
  clinicianID: String!
  role: String!
  facts: String!
  APS: String!
  DTA: String!
  UXSA: String!
}

type ClinicianPatientMap
  @model
  @auth(rules: [{ allow: owner }, { allow: groups, groups: ["Admin"] }])
  @key(fields: ["clinicianID", "patientID"]) {
  id: ID!
  clinicianID: String!
  patientID: String!
  createdAt: String!
}
